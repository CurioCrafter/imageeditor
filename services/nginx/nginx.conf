events {
    worker_connections 1024;
}

http {
    upstream ai_inference {
        server ai-inference:8080;
    }

    upstream auth_service {
        server auth:8084;
    }

    upstream collaboration_service {
        server collaboration:8082;
    }

    upstream assets_service {
        server assets:8083;
    }

    upstream model_registry {
        server model-registry:8081;
    }

    server {
        listen 80;
        server_name localhost;

        # AI Inference Service
        location /ai/ {
            proxy_pass http://ai_inference/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Auth Service
        location /auth/ {
            proxy_pass http://auth_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Collaboration Service
        location /collab/ {
            proxy_pass http://collaboration_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Assets Service
        location /assets/ {
            proxy_pass http://assets_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Model Registry
        location /models/ {
            proxy_pass http://model_registry/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
